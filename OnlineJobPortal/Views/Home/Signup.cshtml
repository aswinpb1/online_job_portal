@model OnlineJobPortal.Models.User

@{
    ViewData["Title"] = "User Details";
    var errorMessage = TempData["errormessage"]?.ToString();
    var successMessage = TempData["successMessage"]?.ToString();
}

<h2 class="text-center">Registration Form</h2>

@if (!string.IsNullOrWhiteSpace(successMessage))
{
    <div class="alert alert-success">
        <b>Success: </b>@successMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        <b>Error: </b>@errorMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<link rel="stylesheet" href="~/css/register.css" asp-append-version="true" />

<div class="container mt-5">
    <div class="row justify-content-center" id="registration">
        <div class="col-md-8">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control",id="dob", onchange="date()"} })
                            <span id="dateerror" class="text-danger"></span>
                            @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            <div class="form-check">
                                @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input", id = "genderMale" })
                                <label class="form-check-label" for="genderMale">Male</label>
                            </div>
                            <div class="form-check">
                                @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input", id = "genderFemale" })
                                <label class="form-check-label" for="genderFemale">Female</label>
                            </div>
                            <div class="form-check">
                                @Html.RadioButtonFor(model => model.Gender, "Other", new { @class = "form-check-input", id = "genderOther" })
                                <label class="form-check-label" for="genderOther">Other</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" ,id="phone" ,onchange="phonevalidation()" } })
                            <span id="numbererror" class="text-danger"></span>
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Confirmpassword, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Confirmpassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Confirmpassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6">
                            @Html.ActionLink("Home", "Homeindex", "Home", null, new { @class = "btn btn-secondary w-30" })
                        </div>
                        <div class="col-md-6 text-end">
                            <input type="submit" value="Register" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/js/signup.js" asp-append-version="true"></script>
}
