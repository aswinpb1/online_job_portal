@model OnlineJobPortal.Models.Job

@{
    ViewData["Title"] = "Create Job";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    var errorMessage = TempData["errormessage"]?.ToString();
    var successMessage = TempData["successMessage"]?.ToString();
}
<link rel="stylesheet" href="~/css/user/Viewjobfromstatus.css" asp-append-version="true" />

<h2 style="justify-content:center">Job Details</h2>

@if (!string.IsNullOrWhiteSpace(successMessage))
{
    <div class="alert alert-success">
        <b>Success: </b>@successMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        <b>Error: </b>@errorMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.JobID)

    <div class="form-group row">
        @Html.LabelFor(model => model.Jobname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Jobname, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Eligibility, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Eligibility, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Location, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Positions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Positions, new { htmlAttributes = new { @class = "form-control-plaintext" } })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <div class="mt-3">
                    <img src="data:image/png;base64,@Model.Image" alt="Photo" class="img-thumbnail" style="width:150px; height:auto;" />
                </div>
            }
            else
            {
                <span>No photo currently available.</span>
            }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back", "Status", "User", null, new { @class = "btn btn-secondary w-10" })
</div>
